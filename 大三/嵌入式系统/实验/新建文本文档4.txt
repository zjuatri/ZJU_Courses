#include "stm32f10x.h"

// --- ???? ---
// LED DS0 (??? PB5)
#define DS0_GPIO_PORT       GPIOB
#define DS0_GPIO_CLK        RCC_APB2Periph_GPIOB
#define DS0_PIN             GPIO_Pin_5

// LED DS1 (??? PE5)
#define DS1_GPIO_PORT       GPIOE
#define DS1_GPIO_CLK        RCC_APB2Periph_GPIOE
#define DS1_PIN             GPIO_Pin_5

// ??? (??? PB8)
#define BEEP_GPIO_PORT      GPIOB
#define BEEP_GPIO_CLK       RCC_APB2Periph_GPIOB // ?DS0?????,???????
#define BEEP_PIN            GPIO_Pin_8

// ?? KEY0 (PE4) - ??????????,????????
#define KEY0_GPIO_PORT      GPIOE
#define KEY0_GPIO_CLK       RCC_APB2Periph_GPIOE // ?DS1?????,???????
#define KEY0_PIN            GPIO_Pin_4

// ?? KEY1 (PE3)
#define KEY1_GPIO_PORT      GPIOE
#define KEY1_GPIO_CLK       RCC_APB2Periph_GPIOE // ?DS1?KEY0?????
#define KEY1_PIN            GPIO_Pin_3
#define KEY1_EXTI_LINE      EXTI_Line3
#define KEY1_IRQn           EXTI3_IRQn
#define KEY1_PORT_SOURCE    GPIO_PortSourceGPIOE
#define KEY1_PIN_SOURCE     GPIO_PinSource3

// ?? KEY_UP (PA0)
#define KEYUP_GPIO_PORT     GPIOA
#define KEYUP_GPIO_CLK      RCC_APB2Periph_GPIOA
#define KEYUP_PIN           GPIO_Pin_0
#define KEYUP_EXTI_LINE     EXTI_Line0
#define KEYUP_IRQn          EXTI0_IRQn
#define KEYUP_PORT_SOURCE   GPIO_PortSourceGPIOA
#define KEYUP_PIN_SOURCE    GPIO_PinSource0


// --- ???? ---
void delay_ms(int ms) {
    int i, j;
    for(i = 0; i < ms; i++) {
        for(j = 0; j < 7500; j++); // ?????????,????????MCU????
    }
}

// --- GPIO ???? ---
void LED_Config(void) {
    GPIO_InitTypeDef GPIO_InitStructure;

    // ?? DS0 (GPIOB) ? DS1 (GPIOE) ?? GPIO ?????
    RCC_APB2PeriphClockCmd(DS0_GPIO_CLK | DS1_GPIO_CLK, ENABLE);

    // ?? DS0 (PB5)
    GPIO_InitStructure.GPIO_Pin = DS0_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; // ????
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(DS0_GPIO_PORT, &GPIO_InitStructure);
    GPIO_ResetBits(DS0_GPIO_PORT, DS0_PIN); // ????:DS0?

    // ?? DS1 (PE5)
    GPIO_InitStructure.GPIO_Pin = DS1_PIN;
    // GPIO_Mode ? GPIO_Speed ?DS0?????,??????
    GPIO_Init(DS1_GPIO_PORT, &GPIO_InitStructure);
    GPIO_SetBits(DS1_GPIO_PORT, DS1_PIN); // ????:DS1?
}

void Buzzer_Config(void) {
    GPIO_InitTypeDef GPIO_InitStructure;

    // ??????? GPIO ????? (GPIOB)
    // ??:??DS0?????,LED_Config????????,??????
    RCC_APB2PeriphClockCmd(BEEP_GPIO_CLK, ENABLE);

    // ??????? (PB8)
    GPIO_InitStructure.GPIO_Pin = BEEP_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; // ????
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(BEEP_GPIO_PORT, &GPIO_InitStructure);
    GPIO_ResetBits(BEEP_GPIO_PORT, BEEP_PIN); // ????:?????
}

void Key_Config(void) {
    GPIO_InitTypeDef GPIO_InitStructure;

    // ?????? GPIO ????? (GPIOE for KEY0/KEY1, GPIOA for KEY_UP)
    // ??:??DS1?????(GPIOE),LED_Config????????
    RCC_APB2PeriphClockCmd(KEY0_GPIO_CLK | KEYUP_GPIO_CLK, ENABLE); // KEY1_GPIO_CLK is same as KEY0_GPIO_CLK

    // KEY0 (PE4) - ?????,???????
    GPIO_InitStructure.GPIO_Pin = KEY0_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; // ????
    GPIO_Init(KEY0_GPIO_PORT, &GPIO_InitStructure);

    // KEY1 (PE3) - ?????,???????
    GPIO_InitStructure.GPIO_Pin = KEY1_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; // ????
    GPIO_Init(KEY1_GPIO_PORT, &GPIO_InitStructure);

    // KEY_UP (PA0) - ?????,???????
    GPIO_InitStructure.GPIO_Pin = KEYUP_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; // ????
    GPIO_Init(KEYUP_GPIO_PORT, &GPIO_InitStructure);
}

// --- ???????? ---
void EXTI_NVIC_Config(void) {
    EXTI_InitTypeDef EXTI_InitStructure;
    NVIC_InitTypeDef NVIC_InitStructure;

    // 1. ??AFIO?? (??????)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);

    // 2. ?????? (NVIC) - ??????????
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);

    // --- ?? KEY_UP (PA0) ????? ---
    GPIO_EXTILineConfig(KEYUP_PORT_SOURCE, KEYUP_PIN_SOURCE);
    EXTI_InitStructure.EXTI_Line = KEYUP_EXTI_LINE;
    EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    EXTI_Init(&EXTI_InitStructure);

    NVIC_InitStructure.NVIC_IRQChannel = KEYUP_IRQn;
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);

    // --- ?? KEY1 (PE3) ????? ---
    GPIO_EXTILineConfig(KEY1_PORT_SOURCE, KEY1_PIN_SOURCE);
    EXTI_InitStructure.EXTI_Line = KEY1_EXTI_LINE;
    EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    EXTI_Init(&EXTI_InitStructure);

    NVIC_InitStructure.NVIC_IRQChannel = KEY1_IRQn;
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
}


// --- ?????? ---

// KEY_UP (PA0) ?????????
void EXTI0_IRQHandler(void) {
    if (EXTI_GetITStatus(KEYUP_EXTI_LINE) != RESET) {
        GPIO_SetBits(BEEP_GPIO_PORT, BEEP_PIN);
        delay_ms(5000); // ?????2.1? (??72MHz????delay_ms)
        GPIO_ResetBits(BEEP_GPIO_PORT, BEEP_PIN);
        EXTI_ClearITPendingBit(KEYUP_EXTI_LINE);
    }
}

// KEY1 (PE3) ?????????
void EXTI3_IRQHandler(void) {
    if (EXTI_GetITStatus(KEY1_EXTI_LINE) != RESET) {
			 GPIO_ResetBits(DS1_GPIO_PORT, DS1_PIN);
        delay_ms(5000); // ?????2.1?
			 GPIO_SetBits(DS1_GPIO_PORT, DS1_PIN);
        EXTI_ClearITPendingBit(KEY1_EXTI_LINE);
    }
}


// --- ??? ---
int main(void) {
	
	
    // ???LED???????
    LED_Config();
    Buzzer_Config();
    Key_Config();

    // ??????? (??NVIC??)
    EXTI_NVIC_Config();

    // ???:DS0??
    while (1) {
        GPIO_SetBits(DS0_GPIO_PORT, DS0_PIN);   // DS0 (PB5) ?
        delay_ms(500);                         // ?????0.21?
        GPIO_ResetBits(DS0_GPIO_PORT, DS0_PIN); // DS0 (PB5) ?
        delay_ms(500);                         // ?????0.21?
    }
}

