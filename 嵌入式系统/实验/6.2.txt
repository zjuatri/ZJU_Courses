#include "stm32f10x.h" // ???? STM32 ???????????

#define LED_GPIO_PORT GPIOB
#define LED_PIN       GPIO_Pin_5
#define LED_RCC_APB2PERIPH RCC_APB2Periph_GPIOB

void delay_ms(volatile unsigned int milliseconds) {
    volatile unsigned int i, j;
    for (i = 0; i < milliseconds; i++) {
        for (j = 0; j < 12000; j++); // ???? SYSCLK ??????
    }
}

// LED0 ?????
void LED0_Init(void) {
    GPIO_InitTypeDef GPIO_InitStructure;

    // 1. ?? LED0 ?? GPIO ?????
    RCC_APB2PeriphClockCmd(LED_RCC_APB2PERIPH, ENABLE);

    // 2. ?? LED0 GPIO ?????????
    GPIO_InitStructure.GPIO_Pin = LED_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; // ????
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(LED_GPIO_PORT, &GPIO_InitStructure);

    // 3. ????? LED0 (???????,?????????)
    // ????????,??? GPIO_ResetBits
    GPIO_SetBits(LED_GPIO_PORT, LED_PIN);
}

// USART1 ????? (?????)
void USART1_Interrupt_Init(unsigned int bound) {
    GPIO_InitTypeDef GPIO_InitStructure;
    USART_InitTypeDef USART_InitStructure;
    NVIC_InitTypeDef NVIC_InitStructure; // NVIC???,??????

    // 1. ??????
    // ?? GPIOA ?? (USART1 ? TX ? RX ??? PA9 ? PA10)
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
    // ?? USART1 ????
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);

    // 2. GPIO ??? (PA9 TX, PA10 RX)
    // ?? PA9 (USART1_TX) ???????
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // ?? PA10 (USART1_RX) ?????
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // 3. ???? (??,???)
    USART_DeInit(USART1);

    // 4. ???????
    USART_InitStructure.USART_BaudRate = bound; // ???
    USART_InitStructure.USART_WordLength = USART_WordLength_8b; // 8?????
    USART_InitStructure.USART_StopBits = USART_StopBits_1; // 1????
    USART_InitStructure.USART_Parity = USART_Parity_No; // ?????
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // ?????
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx; // ???????
    USART_Init(USART1, &USART_InitStructure); // ???USART1

    // 5. ???????? (???????????????)
    USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);

    // 6. ?? NVIC (?????????)
    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn; // USART1 ????
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0; // ????? (????,?????)
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;        // ???? (?????)
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;           // ??????
    NVIC_Init(&NVIC_InitStructure);                           // ???NVIC

    // 7. ?? USART1
    USART_Cmd(USART1, ENABLE);
}

// USART1 ??????
void USART1_IRQHandler(void) {
    unsigned short received_char; // ??????????

    // ????????? (?????????)
    if (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET) {
        // ????????,???????? USART_IT_RXNE ???
        received_char = USART_ReceiveData(USART1);

        // ?????????????
        USART_SendData(USART1, received_char);

        // ?????? (TC???)
        // ????????????????????,???????????
        // ??????,???????
        while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);
        // USART_FLAG_TC ???????????????????????
        // ??????SR???????DR??????,????????0????
        // ?????????,??TXE?????,?????????,??TC????
    }
    // ??????? USART ???,?????????????
    // ??: if (USART_GetITStatus(USART1, USART_IT_TXE) != RESET) { ... }
    // ???? USART_ClearITPendingBit ????????,?????????????
}

int main(void) {
    // ??? LED0
    LED0_Init();

    // ??? USART1 ?????,?????? 115200 (????????)
    USART1_Interrupt_Init(9600);

    // ???
    while (1) {
        // LED0 ??? 0.2 ?????
        // ?? LED ?????
        GPIO_ResetBits(LED_GPIO_PORT, LED_PIN); // LED0 ??
        delay_ms(200);                          // ??? 0.2 ?

        GPIO_SetBits(LED_GPIO_PORT, LED_PIN);   // LED0 ??
        delay_ms(200);                          // ??? 0.2 ?
    }
}